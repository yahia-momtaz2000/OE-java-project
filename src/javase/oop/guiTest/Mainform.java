/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javase.oop.guiTest;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class Mainform extends javax.swing.JFrame {

    /**
     * Creates new form Mainform
     */
    public Mainform() {
        initComponents();
        this.setLocationRelativeTo(null);
        // hide Car Type
        jTextFieldCarType.setVisible(false);
        jLabelCarType.setVisible(false);

        ///Gender Radio Action Commands
        jRadioButtonMale.setActionCommand("Male");
        jRadioButtonFemale.setActionCommand("Female");

        /// File Chooser Save
        jFileChooserSave = new JFileChooser();
        jFileChooserOpen = new JFileChooser();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbuttonGroupGender = new javax.swing.ButtonGroup();
        jPopupMenuPersonTable = new javax.swing.JPopupMenu();
        jMenuItemDeleteRecord = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItemExitApplication = new javax.swing.JMenuItem();
        jPanelAddPerson = new javax.swing.JPanel();
        jLabelName = new javax.swing.JLabel();
        jLabelJob = new javax.swing.JLabel();
        jLabelCountry = new javax.swing.JLabel();
        jLabelAge = new javax.swing.JLabel();
        jLabelGender = new javax.swing.JLabel();
        jLabelHasCar = new javax.swing.JLabel();
        jLabelCarType = new javax.swing.JLabel();
        jButtonAddPerson = new javax.swing.JButton();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldJob = new javax.swing.JTextField();
        jComboBoxCountry = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListAge = new javax.swing.JList();
        jRadioButtonMale = new javax.swing.JRadioButton();
        jRadioButtonFemale = new javax.swing.JRadioButton();
        jCheckBoxHasCar = new javax.swing.JCheckBox();
        jTextFieldCarType = new javax.swing.JTextField();
        jPanelContent = new javax.swing.JPanel();
        jTabbedPaneMainForm = new javax.swing.JTabbedPane();
        jScrollPaneTextTab = new javax.swing.JScrollPane();
        jTextPaneTab = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePerson = new javax.swing.JTable();
        jButtonColorChooser = new javax.swing.JButton();
        jPanelTop = new javax.swing.JPanel();
        jButtonWelcome = new javax.swing.JButton();
        jButtonExitApplication = new javax.swing.JButton();
        jPanelFooter = new javax.swing.JPanel();
        jButtonFooter = new javax.swing.JButton();
        jMenuBarMainForm = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItemExport = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuView = new javax.swing.JMenu();
        jMenuSubView = new javax.swing.JMenu();
        jCheckBoxMenuItemViewHidePerson = new javax.swing.JCheckBoxMenuItem();

        jMenuItemDeleteRecord.setIcon(new javax.swing.ImageIcon("C:\\imgs\\remove_from_shortlist.gif")); // NOI18N
        jMenuItemDeleteRecord.setText("Remove Row");
        jMenuItemDeleteRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteRecordActionPerformed(evt);
            }
        });
        jPopupMenuPersonTable.add(jMenuItemDeleteRecord);

        jMenuItem3.setText("jMenuItem3");
        jPopupMenuPersonTable.add(jMenuItem3);
        jPopupMenuPersonTable.add(jSeparator2);

        jMenuItemExitApplication.setText("Exit");
        jMenuItemExitApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitApplicationActionPerformed(evt);
            }
        });
        jPopupMenuPersonTable.add(jMenuItemExitApplication);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelAddPerson.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Person"));

        jLabelName.setText("Name");

        jLabelJob.setText("Job");

        jLabelCountry.setText("Country");

        jLabelAge.setText("Age");

        jLabelGender.setText("Gender");

        jLabelHasCar.setText("Has Car ?");

        jLabelCarType.setText("Car Type");

        jButtonAddPerson.setText("Add Person");
        jButtonAddPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPersonActionPerformed(evt);
            }
        });

        jComboBoxCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Egypt", "Saudi", "Qatar" }));

        jListAge.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "From 10 to 15", "From 16 to 25", "Older Than 25" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListAge.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(jListAge);

        jbuttonGroupGender.add(jRadioButtonMale);
        jRadioButtonMale.setSelected(true);
        jRadioButtonMale.setText("Male");

        jbuttonGroupGender.add(jRadioButtonFemale);
        jRadioButtonFemale.setText("Female");

        jCheckBoxHasCar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxHasCarItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanelAddPersonLayout = new javax.swing.GroupLayout(jPanelAddPerson);
        jPanelAddPerson.setLayout(jPanelAddPersonLayout);
        jPanelAddPersonLayout.setHorizontalGroup(
            jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddPersonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAddPersonLayout.createSequentialGroup()
                        .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldName))
                    .addGroup(jPanelAddPersonLayout.createSequentialGroup()
                        .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelJob)
                            .addComponent(jLabelCountry)
                            .addComponent(jLabelAge))
                        .addGap(7, 7, 7)
                        .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAddPersonLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldJob, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                    .addComponent(jComboBoxCountry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanelAddPersonLayout.createSequentialGroup()
                                .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonMale)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jRadioButtonFemale))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanelAddPersonLayout.createSequentialGroup()
                        .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelGender)
                            .addGroup(jPanelAddPersonLayout.createSequentialGroup()
                                .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabelCarType, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelHasCar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelAddPersonLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBoxHasCar))
                                    .addGroup(jPanelAddPersonLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jTextFieldCarType, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanelAddPersonLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jButtonAddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelAddPersonLayout.setVerticalGroup(
            jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddPersonLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelName)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldJob, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelJob))
                .addGap(26, 26, 26)
                .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCountry))
                .addGap(32, 32, 32)
                .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAge))
                .addGap(24, 24, 24)
                .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelGender)
                    .addComponent(jRadioButtonMale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonFemale)
                .addGap(12, 12, 12)
                .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHasCar)
                    .addComponent(jCheckBoxHasCar))
                .addGap(18, 18, 18)
                .addGroup(jPanelAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCarType, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCarType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanelAddPerson, java.awt.BorderLayout.LINE_START);

        jPanelContent.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTabbedPaneMainForm.setToolTipText("");

        jTextPaneTab.setToolTipText("");
        jScrollPaneTextTab.setViewportView(jTextPaneTab);

        jTabbedPaneMainForm.addTab("Persons Data", jScrollPaneTextTab);

        jTablePerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Job", "Country", "Age", "Gender", "Has Car", "Car Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTablePerson.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTablePersonMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTablePerson);

        jTabbedPaneMainForm.addTab("Persons Table", jScrollPane3);

        jButtonColorChooser.setText("Choose Color");
        jButtonColorChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonColorChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelContentLayout = new javax.swing.GroupLayout(jPanelContent);
        jPanelContent.setLayout(jPanelContentLayout);
        jPanelContentLayout.setHorizontalGroup(
            jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneMainForm, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
            .addGroup(jPanelContentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonColorChooser)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelContentLayout.setVerticalGroup(
            jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelContentLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButtonColorChooser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 206, Short.MAX_VALUE)
                .addComponent(jTabbedPaneMainForm, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanelContent, java.awt.BorderLayout.CENTER);

        jPanelTop.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelTop.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jButtonWelcome.setText("Welcome");
        jButtonWelcome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWelcomeActionPerformed(evt);
            }
        });
        jPanelTop.add(jButtonWelcome);

        jButtonExitApplication.setIcon(new javax.swing.ImageIcon("C:\\imgs\\rollback.gif")); // NOI18N
        jButtonExitApplication.setText("Exit Application");
        jButtonExitApplication.setToolTipText("");
        jButtonExitApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitApplicationActionPerformed(evt);
            }
        });
        jPanelTop.add(jButtonExitApplication);

        getContentPane().add(jPanelTop, java.awt.BorderLayout.NORTH);

        jPanelFooter.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonFooter.setText("jButton1");
        jPanelFooter.add(jButtonFooter);

        getContentPane().add(jPanelFooter, java.awt.BorderLayout.PAGE_END);

        jMenuFile.setText("File");

        jMenuItem1.setText("import");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItem1);

        jMenuItemExport.setText("Export");
        jMenuItemExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExport);
        jMenuFile.add(jSeparator1);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBarMainForm.add(jMenuFile);

        jMenuView.setText("View");

        jMenuSubView.setText("View / Hide");

        jCheckBoxMenuItemViewHidePerson.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jCheckBoxMenuItemViewHidePerson.setSelected(true);
        jCheckBoxMenuItemViewHidePerson.setText("View Person Panel");
        jCheckBoxMenuItemViewHidePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemViewHidePersonActionPerformed(evt);
            }
        });
        jMenuSubView.add(jCheckBoxMenuItemViewHidePerson);

        jMenuView.add(jMenuSubView);

        jMenuBarMainForm.add(jMenuView);

        setJMenuBar(jMenuBarMainForm);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        exitApplication();
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void exitApplication() {
        int userOption = JOptionPane.showConfirmDialog(null, "Are you sure to Exit ? ", "Confirm Exit .. ", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (userOption == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }

    private void jCheckBoxMenuItemViewHidePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemViewHidePersonActionPerformed
        if (jCheckBoxMenuItemViewHidePerson.isSelected()) {
            jPanelAddPerson.setVisible(true);
        } else {
            jPanelAddPerson.setVisible(false);
        }

    }//GEN-LAST:event_jCheckBoxMenuItemViewHidePersonActionPerformed

    private void jButtonExitApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitApplicationActionPerformed
        exitApplication();
    }//GEN-LAST:event_jButtonExitApplicationActionPerformed

    private void jCheckBoxHasCarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxHasCarItemStateChanged
        if (jCheckBoxHasCar.isSelected() == true) {
            jTextFieldCarType.setVisible(true);
            jLabelCarType.setVisible(true);
        } else {
            jTextFieldCarType.setText("");
            jTextFieldCarType.setVisible(false);
            jLabelCarType.setVisible(false);
        }

//        jTextFieldCarType.setVisible(jCheckBoxHasCar.isSelected());
//        jLabelCarType.setVisible(jCheckBoxHasCar.isSelected());

    }//GEN-LAST:event_jCheckBoxHasCarItemStateChanged

    private void jButtonAddPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPersonActionPerformed

        String personName = jTextFieldName.getText();
        String personJob = jTextFieldJob.getText();
        String personCountry = (String) jComboBoxCountry.getSelectedItem();
        String personSelectedAge = (String) jListAge.getSelectedValue();
        String personGenderSelected = jbuttonGroupGender.getSelection().getActionCommand();
        boolean personCheckCar = jCheckBoxHasCar.isSelected();
        String personCarType = jTextFieldCarType.getText();

        System.out.println("name " + personName);
        System.out.println("Job " + personJob);
        System.out.println("Contry " + personCountry);
        System.out.println("Age " + personSelectedAge);
        System.out.println("Gender " + personGenderSelected);
        System.out.println("Car " + personCheckCar);
        System.out.println("Car Type" + personCarType);

        String personData = "person Name :  " + personName + "\n" + "person Job " + personJob
                + "\n" + "person Contry  :  " + personCountry + "\n" + "person Selected Age :   "
                + personSelectedAge + "\n" + "person Gender Selected :   " + personGenderSelected
                + "\n" + "person check Car :  " + personCheckCar + "\n"
                + "personCarType :  " + personCarType;

        jTextPaneTab.setText(personData);

        // Adding data to Person Table
        Person person = new Person(personName, personJob, personCountry, personSelectedAge, personGenderSelected, personCheckCar, personCarType);

        DefaultTableModel tm = (DefaultTableModel) jTablePerson.getModel();
//                int[] myArr = new Int[4];
//                myArr[0] = 15;
//                
//                int[] myArray = {15, 16, 20, 22};
//                
        Object[] rowData = {person.getPersonName(), person.getPersonJob(),
            person.getPersonCountry(), person.getPersonSelectedAge(), person.getPersonGenderSelected(),
            person.isPersonCheckCar(), person.getPersonCarType()};

        tm.addRow(rowData);


    }//GEN-LAST:event_jButtonAddPersonActionPerformed

    private void jButtonWelcomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWelcomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonWelcomeActionPerformed

    private void jTablePersonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePersonMouseReleased

        if (evt.isPopupTrigger()) {
            jPopupMenuPersonTable.show(jTablePerson, evt.getX(), evt.getY());
        }

    }//GEN-LAST:event_jTablePersonMouseReleased

    private void jMenuItemExitApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitApplicationActionPerformed
        exitApplication();
    }//GEN-LAST:event_jMenuItemExitApplicationActionPerformed

    private void jMenuItemDeleteRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteRecordActionPerformed

        DefaultTableModel tm = (DefaultTableModel) jTablePerson.getModel();
        // jTablePerson.getSel
        tm.removeRow(jTablePerson.getSelectedRow());

    }//GEN-LAST:event_jMenuItemDeleteRecordActionPerformed

    private void jButtonColorChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonColorChooserActionPerformed
        Color color = JColorChooser.showDialog(null, "Choose panel color", Color.white);
        jPanelContent.setBackground(color);

    }//GEN-LAST:event_jButtonColorChooserActionPerformed

    private void jMenuItemExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExportActionPerformed
        if (JFileChooser.APPROVE_OPTION == jFileChooserSave.showSaveDialog(null)) {

            System.out.println("User Approve");
            File fi = jFileChooserSave.getSelectedFile();

            try {
                FileWriter fw = new FileWriter(fi);
                BufferedWriter bfw = new BufferedWriter(fw);
                String text = jTextPaneTab.getText();

                text = text.replaceAll("\n", System.lineSeparator());

                bfw.write(text);
                bfw.flush();
                bfw.close();

            } catch (IOException ex) {
                Logger.getLogger(Mainform.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jMenuItemExportActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (JFileChooser.APPROVE_OPTION == jFileChooserOpen.showOpenDialog(null)) {
            File fi = jFileChooserOpen.getSelectedFile();

            try {
                FileReader fr = new FileReader(fi);
                BufferedReader bfr = new BufferedReader(fr);

                String text = bfr.readLine();

                while (text != null) {

                    if (jTextPaneTab.getText().isEmpty()) {
                        jTextPaneTab.setText(text);
                    } else {
                        jTextPaneTab.setText(jTextPaneTab.getText() + "\n" + text);
                    }

                    text = bfr.readLine();
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Mainform.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Mainform.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mainform().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddPerson;
    private javax.swing.JButton jButtonColorChooser;
    private javax.swing.JButton jButtonExitApplication;
    private javax.swing.JButton jButtonFooter;
    private javax.swing.JButton jButtonWelcome;
    private javax.swing.JCheckBox jCheckBoxHasCar;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemViewHidePerson;
    private javax.swing.JComboBox jComboBoxCountry;
    private javax.swing.JLabel jLabelAge;
    private javax.swing.JLabel jLabelCarType;
    private javax.swing.JLabel jLabelCountry;
    private javax.swing.JLabel jLabelGender;
    private javax.swing.JLabel jLabelHasCar;
    private javax.swing.JLabel jLabelJob;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JList jListAge;
    private javax.swing.JMenuBar jMenuBarMainForm;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItemDeleteRecord;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemExitApplication;
    private javax.swing.JMenuItem jMenuItemExport;
    private javax.swing.JMenu jMenuSubView;
    private javax.swing.JMenu jMenuView;
    private javax.swing.JPanel jPanelAddPerson;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelFooter;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JPopupMenu jPopupMenuPersonTable;
    private javax.swing.JRadioButton jRadioButtonFemale;
    private javax.swing.JRadioButton jRadioButtonMale;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPaneTextTab;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPaneMainForm;
    private javax.swing.JTable jTablePerson;
    private javax.swing.JTextField jTextFieldCarType;
    private javax.swing.JTextField jTextFieldJob;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextPane jTextPaneTab;
    private javax.swing.ButtonGroup jbuttonGroupGender;
    // End of variables declaration//GEN-END:variables
 //  private JColorChooser jColorChooser;
    private JFileChooser jFileChooserSave;
    private JFileChooser jFileChooserOpen;
}

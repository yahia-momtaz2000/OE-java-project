/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javase.oop.gui;

import java.util.ArrayList;
import javase.oop.orders.Order;
import javase.oop.products.Software;
import javase.oop.products.SoftwareHandler;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class jInternalFrameSoftware extends javax.swing.JInternalFrame {

    private JFrame masterForm;

    /**
     * Creates new form jInternalFrameSoftware
     */
    public jInternalFrameSoftware() {
        initComponents();
    }

    public jInternalFrameSoftware(JFrame masterForm) {
        initComponents();
        this.masterForm = masterForm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldProductId = new javax.swing.JTextField();
        jTextFieldProductName = new javax.swing.JTextField();
        jTextFieldProductRetailPrice = new javax.swing.JTextField();
        jTextFieldProductDescription = new javax.swing.JTextField();
        jTextFieldSwLicence = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSoftware = new javax.swing.JTable();
        jButtonEditSW = new javax.swing.JButton();
        jButtonDeleteSW = new javax.swing.JButton();
        jButtonAddSW = new javax.swing.JButton();
        jButtonAddToCart = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Software");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setText("Product Id");

        jLabel2.setText("Product Name");

        jLabel3.setText("Product Retail Price");

        jLabel4.setText("Product Description");

        jLabel5.setText("SW Licence");

        jTextFieldProductId.setEnabled(false);

        jTableSoftware.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Id", "Product NAme", "Product  Retail Price", "Product Description", "SW Licnce"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableSoftware.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSoftwareMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableSoftware);

        jButtonEditSW.setText("Edit SW");
        jButtonEditSW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditSWActionPerformed(evt);
            }
        });

        jButtonDeleteSW.setText("Delete SW");
        jButtonDeleteSW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteSWActionPerformed(evt);
            }
        });

        jButtonAddSW.setText("Add SW");
        jButtonAddSW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddSWActionPerformed(evt);
            }
        });

        jButtonAddToCart.setText("Add To Cart");
        jButtonAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddToCartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldSwLicence)
                    .addComponent(jTextFieldProductDescription)
                    .addComponent(jTextFieldProductRetailPrice)
                    .addComponent(jTextFieldProductName)
                    .addComponent(jTextFieldProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButtonAddSW, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEditSW, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonDeleteSW, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jButtonAddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldProductId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldProductRetailPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldProductDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldSwLicence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonDeleteSW, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonEditSW, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonAddSW, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened

        retrieveAllSoftware();
    }//GEN-LAST:event_formInternalFrameOpened

    private void retrieveAllSoftware() {
        ArrayList<Software> softwareList = SoftwareHandler.getAllSoftware();
        System.out.println("SW List Size = " + softwareList.size());

        for (Software software : softwareList) {
            System.out.println(software.getId());
            System.out.println(software.getName());
            System.out.println(software.getRetialPrice());
            System.out.println(software.getDescription());
            System.out.println(software.getLicense());

//            int softwareId = software.getId();
//            String softwareName = software.getName();
//            double softwareRetialPrise = software.getRetialPrice();
//            String softwareDescription = software.getDescription();
//            String softwareLicens = software.getLicense();
//
//            software = new Software(softwareId, softwareName, softwareRetialPrise, softwareDescription, softwareLicens);
            DefaultTableModel dtm = (DefaultTableModel) jTableSoftware.getModel();

            Object[] rowData = {software.getId(), software.getName(), software.getRetialPrice(),
                software.getDescription(), software.getLicense()};
            dtm.addRow(rowData);
        }

    }

    private void jButtonAddSWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddSWActionPerformed
        /// 1. read data from text fields
        // donot read product id

        String productName = jTextFieldProductName.getText();
        double productRetailPrice = Double.parseDouble(jTextFieldProductRetailPrice.getText());
        String productDescription = jTextFieldProductDescription.getText();
        String softwareLicence = jTextFieldSwLicence.getText();

        //2. add this data to DB using SW Handler > Insert Software
        //  SoftwareHandler.insertSoftware(software);
        Software software = new Software(productName, productRetailPrice, productDescription, softwareLicence);
        SoftwareHandler.insertSoftware(software);

        // 3. add this data to new record in JTable
        DefaultTableModel tm = (DefaultTableModel) jTableSoftware.getModel();
        Object[] rowData = {software.getId(), software.getName(), software.getRetialPrice(),
            software.getDescription(), software.getLicense()};
        tm.addRow(rowData);

        // empty the Model first
        tm.setRowCount(0);

        // Select all SW From DB with their IDs
        retrieveAllSoftware();

        //4.  empty the fields
        emptyTheFilds();

        // 5. msg
        JOptionPane.showMessageDialog(null, "New Row has been added", "Adding New Software", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButtonAddSWActionPerformed

    private void jTableSoftwareMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSoftwareMouseClicked
        System.out.println("This is Mouse Clicked");

        Integer productId = (Integer) jTableSoftware.getValueAt(jTableSoftware.getSelectedRow(), 0);
        String productName = (String) jTableSoftware.getValueAt(jTableSoftware.getSelectedRow(), 1);
        Double productRetailPrice = (Double) jTableSoftware.getValueAt(jTableSoftware.getSelectedRow(), 2);
        String productDescription = (String) jTableSoftware.getValueAt(jTableSoftware.getSelectedRow(), 3);
        String softwareLicence = (String) jTableSoftware.getValueAt(jTableSoftware.getSelectedRow(), 4);
        System.out.println("Product Id : " + productId);

        jTextFieldProductId.setText(productId.toString());
        jTextFieldProductName.setText(productName);
        jTextFieldProductRetailPrice.setText(productRetailPrice.toString());
        jTextFieldProductDescription.setText(productDescription);
        jTextFieldSwLicence.setText(softwareLicence);


    }//GEN-LAST:event_jTableSoftwareMouseClicked

    private void emptyTheFilds() {
        jTextFieldProductId.setText(null);
        jTextFieldProductName.setText(null);
        jTextFieldProductRetailPrice.setText(null);
        jTextFieldProductDescription.setText(null);
        jTextFieldSwLicence.setText(null);
    }


    private void jButtonEditSWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditSWActionPerformed
        // Read all fields updated by the user or not update
        int productId = Integer.parseInt(jTextFieldProductId.getText());
        String productName = jTextFieldProductName.getText();
        double productRetialPrise = Double.parseDouble(jTextFieldProductRetailPrice.getText());
        String productDescription = jTextFieldProductDescription.getText();
        String softwareLicence = jTextFieldSwLicence.getText();

        // 2. update JTable fields of the current selected row
        jTableSoftware.setValueAt(productName, jTableSoftware.getSelectedRow(), 1);
        jTableSoftware.setValueAt(productRetialPrise, jTableSoftware.getSelectedRow(), 2);
        jTableSoftware.setValueAt(productDescription, jTableSoftware.getSelectedRow(), 3);
        jTableSoftware.setValueAt(softwareLicence, jTableSoftware.getSelectedRow(), 4);

        // 3. update DB  ( yahia )
        Software software = new Software(productId, productName, productRetialPrise, productDescription, softwareLicence);
        SoftwareHandler.updateSoftware(software);

        //  4. empty fields
        emptyTheFilds();

    }//GEN-LAST:event_jButtonEditSWActionPerformed

    private void jButtonDeleteSWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteSWActionPerformed

        // 1. Read Product Id ( to delete the db row )
        Integer productId = Integer.parseInt(jTextFieldProductId.getText());

        // 2. delete DB row
        SoftwareHandler.deleteSoftwareById(productId);
        // 3. remove row from JTable
        DefaultTableModel tm = (DefaultTableModel) jTableSoftware.getModel();
        tm.removeRow(jTableSoftware.getSelectedRow());

        // 4. empty fields    
        emptyTheFilds();

    }//GEN-LAST:event_jButtonDeleteSWActionPerformed

    private void jButtonAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddToCartActionPerformed

        /// Show Cart Screen only
      //  jInternalFrameCart cartForm = new jInternalFrameCart();
             jInternalFrameCart cartForm = jInternalFrameCart.getMyInstance();
        MasterForm mf = (MasterForm) masterForm;
        
      if(!cartForm.isVisible()) {
         cartForm.setVisible(true);
        cartForm.setLocation(800, 200);
        mf.getjDesktopPaneMaster().add(cartForm);
      }
      

        /// Retrieve Current Software
        int productId = Integer.parseInt(jTextFieldProductId.getText());
        Software software = SoftwareHandler.getSoftwareById(productId);

        /// Create Current Order
        Order currentOrder = jInternalFrameLogin.getCurrentOrder();
        
        
        currentOrder.addOrderItem(software);

        /// Preview order on the console
        currentOrder.showOrderDetails();

              /// Add Order items to JTable in Cart Screen
        cartForm.reFillCart(currentOrder);

    }//GEN-LAST:event_jButtonAddToCartActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddSW;
    private javax.swing.JButton jButtonAddToCart;
    private javax.swing.JButton jButtonDeleteSW;
    private javax.swing.JButton jButtonEditSW;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSoftware;
    private javax.swing.JTextField jTextFieldProductDescription;
    private javax.swing.JTextField jTextFieldProductId;
    private javax.swing.JTextField jTextFieldProductName;
    private javax.swing.JTextField jTextFieldProductRetailPrice;
    private javax.swing.JTextField jTextFieldSwLicence;
    // End of variables declaration//GEN-END:variables
}
